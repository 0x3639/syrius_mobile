name: Build and Release IOS IPA
on:
  push:
    tags:
      - 'v*'  # Triggers on version tags

jobs:
  deploy:
    runs-on: macos-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.5'
          channel: 'stable'

      - name: Install Apple Certificate
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.IOS_DISTRIBUTION_CERTIFICATE }}
          P12_PASSWORD: ${{ secrets.IOS_CERTIFICATE_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.IOS_PROVISION_PROFILE }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # Create keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" build.keychain
          security set-keychain-settings -t 3600 -l ~/Library/Keychains/build.keychain

          # Import certificate
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output /tmp/certificate.p12
          security import /tmp/certificate.p12 -k build.keychain -P "$P12_PASSWORD" -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "$KEYCHAIN_PASSWORD" build.keychain

          # Import provisioning profile
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode --output /tmp/profile.mobileprovision
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp /tmp/profile.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles

      - name: Flutter pub get
        run: flutter pub get

      - name: Build IPA
        run: |
          xcrun xcodebuild -exportArchive \
            -allowProvisioningDeviceRegistration \
            -allowProvisioningUpdates \
            -archivePath build/ios/archive/Runner.xcarchive \
            -exportPath build/ios/ipa \
            -exportOptionsPlist /var/folders/3s/b36dp_4s3wv3byw057j8bp940000gn/T/flutter_tools.Cri6PH/flutter_build_ios.fyMBok/ExportOptions.plist \
            -verbose

      - name: Verify IPA Creation
        run: |
          echo "Checking for IPA file..."
          find build/ios -name "*.ipa"

      - name: Upload to TestFlight
        env:
          APP_STORE_CONNECT_API_KEY_FILE: ${{ secrets.APP_STORE_CONNECT_API_KEY_FILE }}
          APP_STORE_CONNECT_API_KEY: ${{ secrets.APP_STORE_CONNECT_API_KEY }}
        run: |
          # Create private_keys directory
          mkdir -p ~/.private_keys

          # Decode and save key with correct name
          echo "$APP_STORE_CONNECT_API_KEY_FILE" | base64 --decode > ~/.private_keys/AuthKey_${APP_STORE_CONNECT_API_KEY}.p8
          
          # Set permissions
          chmod 600 ~/.private_keys/AuthKey_${APP_STORE_CONNECT_API_KEY}.p8
          
          # Upload using key file
          xcrun altool --upload-app -f build/ios/ipa/Syrius.ipa -t ios \
            --apiKey "${{ secrets.APP_STORE_CONNECT_API_KEY }}" \
            --apiIssuer "${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}"
          
          # Clean up
          rm ~/.private_keys/AuthKey_${APP_STORE_CONNECT_API_KEY}.p8